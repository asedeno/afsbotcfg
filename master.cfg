#  -*- python -*-
# ex: set syntax=python:

from buildbot.plugins import *
from afsbotcfg.worker import Worker
from afsbotcfg.gerrit import gerritSummaryCB
from afsbotcfg.mail   import getMailAddresses

c = BuildmasterConfig = {}

####### WORKERS

c['workers'] = [
    Worker('sgi_irix_65-64bit', contact='Chaz Chandler', notify_on_missing='clc31@inbox.com'),
    Worker('rhel5-x86_64', contact='Jason Edgecombe'),
    Worker('rhel6-x86_64', contact='Dave Botch'),
    Worker('macos10-12-x86_64', contact='Dave Botch'),
    Worker('fedora20-x86_64', contact='Derek Atkins'),
    Worker('fedora21-x86_64', contact='Derek Atkins'),
    Worker('fedora22-x86_64', contact='Derek Atkins'),
    Worker('fedora23-x86_64', contact='Derek Atkins'),
    Worker('fedora24-x86_64', contact='Derek Atkins'),
    Worker('fedora25-x86_64', contact='Derek Atkins'),
    Worker('opensuse12-x86_64', contact='Christof Hanke', notify_on_missing='christof.hanke@rzg.mpg.de'),
    Worker('opensuse12-i386', contact='Christof Hanke', notify_on_missing='christof.hanke@rzg.mpg.de'),
    Worker('opensuse13-arm', contact='Christof Hanke', notify_on_missing='christof.hanke@rzg.mpg.de'),
    Worker('opensuse-tumbleweed-x86_64', contact='Christof Hanke', notify_on_missing='christof.hanke@rzg.mpg.de'),
    Worker('opensuse-tumbleweed-i386', contact='Christof Hanke', notify_on_missing='christof.hanke@rzg.mpg.de'),
    Worker('ubuntu14-x86_64', contact='Ben Kaduk'),
    Worker('freebsd100-i386', contact='Garrett Wollman'),
    Worker('sun510_x86', contact='Michael Meffie'),
    Worker('sun511_x86', contact='Michael Meffie'),
    Worker('centos73-x86_64', contact='Michael Meffie'),
    Worker('ubuntu1610-x86_64', contact='Michael Meffie'),
    Worker('linux-rc-x86_64', contact='Michael Meffie'),
    Worker('debian87-x86_64', contact='Michael Meffie'),
    Worker('debian8-amd64', contact='Nathan Hatley'),
    Worker('debian8-i386', contact='Nathan Hatley'),
    Worker('win7-amd64', contact='Alejando R. Sedeno'),
]

# The port number used by workers to connect to the buildbot master.
c['protocols'] = {'pb': {'port': 9989}}

####### CHANGESOURCES

# The 'change_source' setting tells the buildmaster how it should find out
# about source code changes. The GerritChangeSource connects to the gerrit
# server via ssh and receives gerrit-events over the ssh connection.
c['change_source'] = [
    changes.GerritChangeSource(
        gerritserver='localhost',
        username='buildbot',
        gerritport=22,
        identity_file='/home/buildbot/.ssh/id_rsa',
    ),
]

####### SCHEDULERS

# The Schedulers decide how to react to incoming changes. The gerrit
# schedulers trigger builds as changes are submitted to gerrit.  The
# periodic schedulers trigger builds in a cron-like fashion.

c['schedulers'] = [
    schedulers.Nightly(
        name='Daily',
        hour=[0, 12],
        minute=0,
        branch=None,
        builderNames=[
            'fedora25-x86_64-builder',
            'rhel5-x86_64-builder',
            'rhel6-x86_64-builder',
            'opensuse13-arm-builder',
            'opensuse-tumbleweed-i386-builder',
            'opensuse-tumbleweed-x86_64-builder',
            'debian8-amd64-builder',
            'debian8-i386-builder',
            'macos10-12-x86_64-builder',
            'centos73-x86_64-builder',
            'ubuntu1610-x86_64-builder',
            'linux-rc-x86_64-builder',
            'linux-daily-x86_64-builder',
            'debian87-x86_64-builder',
        ],
    ),
    schedulers.Nightly(name='Daily-1.6',
        hour=[2, 14],
        minute=0,
        branch='openafs-stable-1_6_x',
        builderNames=[
            'irix-builder',
            'debian87-x86_64-builder',
        ],
    ),
    schedulers.SingleBranchScheduler(
        name='gerrit_scheduler',
        change_filter=util.ChangeFilter(branch_re='^master/.*'),
        builderNames=[
            'freebsd100-i386-builder',
            'opensuse12-i386-builder',
            'opensuse12-x86_64-builder',
            'ubuntu14-x86_64-builder',
            'solaris10_x86-builder',
            'solaris11_x86-builder',
            'fedora21-x86_64-builder',
            'fedora22-x86_64-builder',
            'fedora23-x86_64-builder',
            'fedora24-x86_64-builder',
            'win7-amd64-free-builder',
            'win7-amd64-checked-builder',
            'win7-x86-free-builder',
            'win7-x86-checked-builder',
        ],
    ),
    schedulers.SingleBranchScheduler(
        name='gerrit_16_scheduler',
        change_filter=util.ChangeFilter(branch_re='^openafs-stable-1_6_x/.*'),
        builderNames=[
            'freebsd100-i386-builder',
            'opensuse12-i386-builder',
            'opensuse12-x86_64-builder',
            'solaris10_x86-builder',
            'solaris11_x86-builder',
            'fedora20-x86_64-builder',
        ],
    ),
    schedulers.SingleBranchScheduler(
        name='gerrit_17_scheduler',
        change_filter=util.ChangeFilter(branch_re='^openafs-devel-1_7_x/.*'),
        builderNames=[]),
]

####### BUILDERS

# The 'builders' list defines the Builders, which tell Buildbot how to perform a build:
# what steps, and which workers can execute them.  Note that any particular build will
# only take place on one worker.

factory = {}
repourl='git://git.openafs.org/openafs.git'
c['builders'] = []

######### irix
f = factory['irix'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep','120']))
f.addStep(steps.ShellCommand(command=['git','clean','-X','-f','-e','!.buildbot-sourcedata']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,60],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600))
f.addStep(steps.ShellCommand(command=['sh','regen.sh']))
f.addStep(steps.Configure(command=['./configure','--enable-checking','--enable-supergroups',
                                   '--enable-namei-fileserver','--with-krb5=/usr/nekoware',
                                   '--enable-pthreaded-ubik'],env={'CC':'cc'}))
f.addStep(steps.Compile(command=['gmake'], warningPattern='.*cc:? WARNING'))
f.addStep(steps.Compile(command=['make','dest'], warningPattern='.*cc:? WARNING'))

c['builders'].append(
    util.BuilderConfig(
        name='irix-builder',
        workername='sgi_irix_65-64bit',
        builddir='irix-65-64bit-builder',
        factory=factory['irix'],
    )
)

######### Generic Linux factory
f = factory['linux'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep','120']))
f.addStep(steps.ShellCommand(command=['git','clean','-d','-x','-f','-e','.buildbot-sourcedata']))
f.addStep(steps.ShellCommand(command=['git','clean','-d','-X','-f','-e','!.buildbot-sourcedata']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,60],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600))
f.addStep(steps.ShellCommand(command=['sh','regen.sh'],timeout=3600))
f.addStep(steps.Configure(command=['./configure','--enable-checking','--enable-supergroups',
                                   '--enable-namei-fileserver','--enable-pthreaded-ubik']))
f.addStep(steps.Compile(command=['make']))
f.addStep(steps.Compile(command=['make','dest']))

######### rhel 5
f = factory['rhel5'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep','120']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,3],timeout=3600))
# clean all files except ignored, don't remove .buildbot-sourcedata
f.addStep(steps.ShellCommand(command=['git','clean','-d','-x','-f','-e','.buildbot-sourcedata'],
                             env={'PATH': '${PATH}:${HOME}/bin'}))
# clean all ignored files, don't remove .buildbot-sourcedata
f.addStep(steps.ShellCommand(command=['git','clean','-d','-X','-f'],env={'PATH': '${PATH}:${HOME}/bin'}))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600))
f.addStep(steps.ShellCommand(command=['sh','regen.sh'],env={'PATH': '${HOME}/bin:${PATH}'}))
f.addStep(steps.Configure(command=['./configure','--enable-supergroups','--enable-namei-fileserver',
                                   '--enable-pthreaded-ubik']))
f.addStep(steps.Compile(command=['make','-j4']))
f.addStep(steps.Compile(command=['make','-j4','dest']))

c['builders'].append(
    util.BuilderConfig(
        name='rhel5-x86_64-builder',
        workername='rhel5-x86_64',
        builddir='rhel5-x86_64-builder',
        factory=factory['rhel5'],
    )
)

######### rhel6
f = factory['rhel6'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep','120']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,3],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','clean','-x','-f','-d']))
f.addStep(steps.ShellCommand(command=['sh','regen.sh']))
f.addStep(steps.Configure(command=['./configure','--enable-supergroups','--enable-namei-fileserver',
                                   '--enable-pthreaded-ubik']))
f.addStep(steps.Compile(command=['make','-j4']))
f.addStep(steps.Compile(command=['make','-j4','dest']))

c['builders'].append(
    util.BuilderConfig(
        name='rhel6-x86_64-builder',
        workername='rhel6-x86_64',
        builddir='rhel6-x86_64-builder',
        factory=factory['rhel6'],
    )
)

######### fedora20 builder
f = factory['fedora20'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep','120']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,3],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600))
# clean all files except ignored, don't remove .buildbot-sourcedata
f.addStep(steps.ShellCommand(command=['git','clean','-d','-x','-f','-e','.buildbot-sourcedata']))
# clean all ignored files, don't remove .buildbot-sourcedata
f.addStep(steps.ShellCommand(command=['git','clean','-d','-X','-f']))
f.addStep(steps.ShellCommand(command=['sh','regen.sh']))
f.addStep(steps.Configure(command=['./configure','--enable-supergroups','--enable-namei-fileserver',
                                   '--enable-pthreaded-ubik']))
f.addStep(steps.Compile(command=['make','-j4']))
f.addStep(steps.Compile(command=['make','-j4','dest']))

c['builders'].append(
    util.BuilderConfig(
        name='fedora20-x86_64-builder',
        workername='fedora20-x86_64',
        builddir='fedora20-x86_64-builder',
        factory=factory['fedora20'],
    )
)

######### fedora21 builder
f = factory['fedora21'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep','120']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,3],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600))
# clean all files except ignored, don't remove .buildbot-sourcedata
f.addStep(steps.ShellCommand(command=['git','clean','-d','-x','-f','-e','.buildbot-sourcedata']))
# clean all ignored files, don't remove .buildbot-sourcedata
f.addStep(steps.ShellCommand(command=['git','clean','-d','-X','-f']))
f.addStep(steps.ShellCommand(command=['sh','regen.sh']))
f.addStep(steps.Configure(command=['./configure','--enable-supergroups','--enable-namei-fileserver',
                                   '--enable-pthreaded-ubik']))
f.addStep(steps.Compile(command=['make','-j4']))
f.addStep(steps.Compile(command=['make','-j4','dest']))

c['builders'].append(
    util.BuilderConfig(
        name='fedora21-x86_64-builder',
        workername='fedora21-x86_64',
        builddir='fedora21-x86_64-builder',
        factory=factory['fedora21'],
    )
)

######### fedora22 builder
f = factory['fedora'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep','120']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,3],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600))
# clean all files except ignored, don't remove .buildbot-sourcedata
f.addStep(steps.ShellCommand(command=['git','clean','-d','-x','-f','-e','.buildbot-sourcedata']))
# clean all ignored files, don't remove .buildbot-sourcedata
f.addStep(steps.ShellCommand(command=['git','clean','-d','-X','-f']))
f.addStep(steps.ShellCommand(command=['sh','regen.sh']))
f.addStep(steps.Configure(command=['./configure','--enable-supergroups','--enable-namei-fileserver',
                                   '--enable-pthreaded-ubik']))
f.addStep(steps.Compile(command=['make','-j4']))
f.addStep(steps.Compile(command=['make','-j4','dest']))

c['builders'].append(
    util.BuilderConfig(
        name='fedora22-x86_64-builder',
        workername='fedora22-x86_64',
        builddir='fedora22-x86_64-builder',
        factory=factory['fedora'],
    )
)

######### fedora23 builder
c['builders'].append(
    util.BuilderConfig(
        name='fedora23-x86_64-builder',
        workername='fedora23-x86_64',
        builddir='fedora23-x86_64-builder',
        factory=factory['fedora'],
    )
)

######### fedora24 builder
c['builders'].append(
    util.BuilderConfig(
        name='fedora24-x86_64-builder',
        workername='fedora24-x86_64',
        builddir='fedora24-x86_64-builder',
        factory=factory['fedora'],
    )
)

######### fedora25 builder
c['builders'].append(
    util.BuilderConfig(
        name='fedora25-x86_64-builder',
        workername='fedora25-x86_64',
        builddir='fedora25-x86_64-builder',
        factory=factory['fedora'],
    )
)

######### opensuse builder
# i386

f = factory['suse86'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep','120']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,3],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','clean','-X','-f','-e','!.buildbot-sourcedata']))
f.addStep(steps.ShellCommand(command=['sh','regen.sh'],timeout=3600))
f.addStep(steps.Configure(command=['./configure','--enable-checking','--enable-supergroups',
                                   '--enable-namei-fileserver','--enable-pthreaded-ubik',
                                   '--with-linux-kernel-build=/usr/src/linux-obj/i586/default']))
f.addStep(steps.Compile(command=['make','-j4']))
f.addStep(steps.Compile(command=['make','-j4','dest']))

# x86_64
f = factory['suse64'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep','120']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,3],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','clean','-X','-f','-e','!.buildbot-sourcedata']))
f.addStep(steps.ShellCommand(command=['sh','regen.sh'],timeout=3600))
f.addStep(steps.Configure(command=['./configure','--enable-checking','--enable-supergroups',
                                   '--enable-namei-fileserver','--enable-pthreaded-ubik',                                                                                            '--with-linux-kernel-build=/usr/src/linux-obj/x86_64/default']))
f.addStep(steps.Compile(command=['make']))
f.addStep(steps.Compile(command=['make','dest']))

######### opensuse12 builder
c['builders'].append(
    util.BuilderConfig(
        name='opensuse12-i386-builder',
        workername='opensuse12-i386',
        builddir='opensuse12-i386-builder',
        factory=factory['suse86'],
    )
)

c['builders'].append(
    util.BuilderConfig(
        name='opensuse12-x86_64-builder',
        workername='opensuse12-x86_64',
        builddir='opensuse12-x86_64-builder',
        factory=factory['suse64'],
    )
)

######### opensuse tumbleweed builder
c['builders'].append(
    util.BuilderConfig(
        name='opensuse-tumbleweed-i386-builder',
        workername='opensuse-tumbleweed-i386',
        builddir='opensuse-tumbleweed-i386-builder',
        factory=factory['suse86'],
    )
)

c['builders'].append(
    util.BuilderConfig(
        name='opensuse-tumbleweed-x86_64-builder',
        workername='opensuse-tumbleweed-x86_64',
        builddir='opensuse-tumbleweed-x86_64-builder',
        factory=factory['suse64'],
    )
)

######### opensuse13 arm builder
c['builders'].append(
    util.BuilderConfig(
        name='opensuse13-arm-builder',
        workername='opensuse13-arm',
        builddir='opensuse13-arm-builder',
        factory=factory['linux'],
    )
)

######### mac builders
macintel_env={
    'ARCHFLAGS':'-arch x86_64',
    'PATH':'/usr/local/git/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/opt/local/bin:/opt/local/sbin',
    'LD_LIBRARY_PATH':'/opt/local/lib'
}

f = factory['macintel'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep','120']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,3],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600,env=macintel_env))
f.addStep(steps.ShellCommand(command=['git','clean','-X','-f','-d','-e','!.buildbot-sourcedata'],env=macintel_env))
f.addStep(steps.ShellCommand(command=['sh','regen.sh'],timeout=3600,env=macintel_env))
# --enable-checking has been temporarily disabled until the deprecated syscall() is no longer used.
f.addStep(steps.Configure(command=['./configure','--enable-transarc-paths','--enable-pthreaded-ubik',
                                   '--enable-warnings','--disable-pam'], env=macintel_env))
f.addStep(steps.Compile(command=['make','dest'],env=macintel_env))

# mac 10.12
c['builders'].append(
    util.BuilderConfig(
        name='macos10-12-x86_64-builder',
        workername='macos10-12-x86_64',
        builddir='macos10-12-x86_64-builder',
        factory=factory['macintel'],
    )
)

######### debian 8 builders
f = factory['debian8'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep','120']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,3], timeout=3600))
f.addStep(steps.ShellCommand(command=['sh','regen.sh'],timeout=3600))
f.addStep(steps.Configure(command=['./configure','--enable-supergroups','--enable-namei-fileserver',
                                   '--enable-pthreaded-ubik']))
f.addStep(steps.Compile(command=['make','-j5']))
f.addStep(steps.Compile(command=['make','-j5','dest']))

######### debian amd64 builder
c['builders'].append(
    util.BuilderConfig(
        name='debian8-amd64-builder',
        workername='debian8-amd64',
        builddir='debian8-amd64-builder',
        factory=factory['debian8'],
    )
)

######### debian i386 builder
c['builders'].append(
    util.BuilderConfig(
        name='debian8-i386-builder',
        workername='debian8-i386',
        builddir='debian8-i386-builder',
        factory=factory['debian8'],
    )
)

######### debian87 amd64 builder
c['builders'].append(
    util.BuilderConfig(
        name='debian87-x86_64-builder',
        workername='debian87-x86_64',
        builddir='debian87-x86_64-builder',
        factory=factory['debian8'],
    )
)

######### ubunu x86_64 builder
c['builders'].append(
    util.BuilderConfig(
        name='ubuntu14-x86_64-builder',
        workername='ubuntu14-x86_64',
        builddir='ubuntu14-x86_64-builder',
        factory=factory['linux'],
    )
)

######### freebsd builders
f = factory['freebsd100'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep','120']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,3],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','clean','-X','-f','-e','!.buildbot-sourcedata']))
f.addStep(steps.ShellCommand(command=['sh','regen.sh']))
f.addStep(steps.Configure(command=['./configure','--enable-supergroups','--enable-warnings',
                                   '--enable-namei-fileserver','--with-bsd-kernel-headers=/usr/src/sys',
                                   '--with-bsd-kernel-build=/usr/obj/usr/src/sys/GENERIC']))
f.addStep(steps.Compile(command=['make']))
f.addStep(steps.Compile(command=['make', 'dest']))

c['builders'].append(
    util.BuilderConfig(
        name='freebsd100-i386-builder',
        workername='freebsd100-i386',
        builddir='freebsd100-i386-builder',
        factory=factory['freebsd100'],
    )
)

######### solaris 10 x86 builder
f = factory['solaris10_x86'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep','120']))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','clean','-X','-f','-e','!.buildbot-sourcedata']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,3],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600))
f.addStep(steps.ShellCommand(command=['sh','regen.sh']))
f.addStep(steps.Configure(command=['./configure','--enable-debug','--disable-optimize','--enable-debug-kernel',
                                   '--disable-optimize-kernel','--enable-transarc-paths','--enable-namei-fileserver',]))
f.addStep(steps.Compile(command=['make']))
f.addStep(steps.Compile(command=['make', 'dest']))

c['builders'].append(
    util.BuilderConfig(
        name='solaris10_x86-builder',
        workername='sun510_x86',
        builddir='sun510_x86-builder',
        factory=factory['solaris10_x86'],
    )
)

######### solaris 11 x86 builder
f = factory['solaris11_x86'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep','120']))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','clean','-X','-f','-e','!.buildbot-sourcedata']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,3],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600))
f.addStep(steps.ShellCommand(command=['sh','regen.sh']))
f.addStep(steps.Configure(command=['./configure','--enable-debug','--disable-optimize','--enable-debug-kernel',
                                   '--disable-optimize-kernel','--enable-transarc-paths','--enable-namei-fileserver',]))
f.addStep(steps.Compile(command=['make']))
f.addStep(steps.Compile(command=['make', 'dest']))

c['builders'].append(
    util.BuilderConfig(
        name='solaris11_x86-builder',
        workername='sun511_x86',
        builddir='sun511_x86-builder',
        factory=factory['solaris11_x86'],
    )
)

######### centos 7.3 x86_64 builder
f = factory['centos73'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep','120']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,3],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','clean','-x','-f','-d']))
f.addStep(steps.ShellCommand(command=['sh','regen.sh']))
f.addStep(steps.Configure(command=['./configure','--enable-checking','--enable-transarc-paths',
                                   '--enable-supergroups','--enable-pthreaded-ubik']))
f.addStep(steps.Compile(command=['make']))
f.addStep(steps.Compile(command=['make','dest']))

c['builders'].append(
    util.BuilderConfig(
        name='centos73-x86_64-builder',
        workername='centos73-x86_64',
        builddir='centos73-x86_64-builder',
        factory=factory['centos73'],
    )
)

######### ubuntu 16.10 x86_64 builder
f = factory['ubuntu1610'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep','120']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,3],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','gc','--auto'],timeout=3600))
f.addStep(steps.ShellCommand(command=['git','clean','-x','-f','-d']))
f.addStep(steps.ShellCommand(command=['sh','regen.sh']))
f.addStep(steps.Configure(command=['./configure','--enable-checking','--enable-transarc-paths',
                                   '--enable-supergroups','--enable-pthreaded-ubik']))
f.addStep(steps.Compile(command=['make']))
f.addStep(steps.Compile(command=['make','dest']))

c['builders'].append(
    util.BuilderConfig(
        name='ubuntu1610-x86_64-builder',
        workername='ubuntu1610-x86_64',
        builddir='ubuntu1610-x86_64-builder',
        factory=factory['ubuntu1610'],
    )
)

######### linux rc x86_64 builder
# This builder will spin up a clean vm, install the most recent linux rc,
# build openafs, install openafs, and smoke test.
f = factory['linuxrc'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep', '60']))
f.addStep(steps.ShellCommand(description='build', command=[
    '/usr/local/bin/virt-run',
    '--base', 'ubuntu1610-builder',
    '--user', 'buildbot',
    'sudo afsutil check --fix-hosts',
    'kernel-ppa get',
    'kernel-ppa install',
    '@reboot',
    'uname -a',
    'git clone git://git.openafs.org/openafs.git openafs',
    'afsutil build --chdir openafs',
    'afsrobot setup',
    'afsrobot test --suite client',
]))

c['builders'].append(
    util.BuilderConfig(
        name='linux-rc-x86_64-builder',
        workername='linux-rc-x86_64',
        builddir='linux-rc-x86_64-builder',
        factory=factory['linuxrc'],
    )
)

######### linux daily x86_64 builder
# This builder will spin up a clean vm, install the most recent linux daily,
# from the Ubuntu kernel team, build openafs, install openafs, then smoke test.
f = factory['linuxdaily'] = util.BuildFactory()
f.addStep(steps.ShellCommand(command=['sleep', '180']))
f.addStep(steps.ShellCommand(description='build', command=[
    '/usr/local/bin/virt-run',
    '--base', 'ubuntu1610-builder',
    '--user', 'buildbot',
    'sudo afsutil check --fix-hosts',
    'kernel-ppa get daily/current',
    'kernel-ppa install',
    '@reboot',
    'uname -a',
    'git clone git://git.openafs.org/openafs.git openafs',
    'afsutil build --chdir openafs',
    'afsrobot setup',
    'afsrobot test --suite client',
]))

c['builders'].append(
    util.BuilderConfig(
        name='linux-daily-x86_64-builder',
        workername='linux-rc-x86_64',
        builddir='linux-daily-x86_64-builder',
        factory=factory['linuxdaily'],
    )
)

###### win_amd64 free builder
f = factory['win_amd64_free'] = util.BuildFactory()
# wait for 2 minutes for gerrit changes settle
f.addStep(steps.ShellCommand(command=['ping','-n','120','localhost']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,60],timeout=3600))
f.addStep(steps.Compile(command=['build-openafs.cmd', 'amd64', 'free']))

c['builders'].append(
    util.BuilderConfig(
        name='win7-amd64-free-builder',
        workername='win7-amd64',
        builddir='win7-amd64-free-builder',
        factory=factory['win_amd64_free'],
    )
)

###### win_amd64 checked builder
f = factory['win_amd64_checked']= util.BuildFactory()
# wait for 2 minutes for gerrit changes settle
f.addStep(steps.ShellCommand(command=['ping','-n','120','localhost']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,60],timeout=3600))
f.addStep(steps.Compile(command=['build-openafs.cmd', 'amd64', 'checked']))

c['builders'].append(
    util.BuilderConfig(
        name='win7-amd64-checked-builder',
        workername='win7-amd64',
        builddir='win7-amd64-checked-builder',
        factory=factory['win_amd64_checked'],
    )
)

###### win_x86 free builder
f = factory['win_x86_free'] = util.BuildFactory()
# wait for 2 minutes for gerrit changes settle
f.addStep(steps.ShellCommand(command=['ping','-n','120','localhost']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,60],timeout=3600))
f.addStep(steps.Compile(command=['build-openafs.cmd', 'x86', 'free']))

c['builders'].append(
    util.BuilderConfig(
        name='win7-x86-free-builder',
        workername='win7-amd64',
        builddir='win7-x86-free-builder',
        factory=factory['win_x86_free'],
    )
)

###### win_x86 checked builder
f = factory['win_x86_checked'] = util.BuildFactory()
# wait for 2 minutes for gerrit changes settle
f.addStep(steps.ShellCommand(command=['ping','-n','120','localhost']))
f.addStep(steps.Gerrit(repourl=repourl, mode='full', method='fresh', retry=[60,60],timeout=3600))
f.addStep(steps.Compile(command=['build-openafs.cmd', 'x86', 'checked']))

c['builders'].append(
    util.BuilderConfig(
        name='win7-x86-checked-builder',
        workername='win7-amd64',
        builddir='win7-x86-checked-builder',
        factory=factory['win_x86_checked'],
    )
)

####### BUILDBOT SERVICES

# Push verfication messages to gerrit as one gerrit update after all the
# builders finish, instead of a gerrit update for each builder.
#
# Send email notifications of the peridoc builders to the to addresses listed
# in mail-linux-rc config file.
c['services'] = [
    reporters.GerritStatusPush(
        'gerrit-prod',
        'buildbot',
        reviewCB=None,
        summaryCB=gerritSummaryCB,
    ),
    reporters.MailNotifier(
        fromaddr='buildbot@openafs.MIT.EDU',
        builders=[
            'linux-rc-x86_64-builder',
            'linux-daily-x86_64-builder',
        ],
        mode=['failing','passing'],
        sendToInterestedUsers=False,
        extraRecipients=getMailAddresses('mail-linux-rc'),
    ),
]

####### PROJECT IDENTITY

c['projectName'] = 'OpenAFS'
c['projectURL'] = 'http://www.openafs.org/'
c['buildbotURL'] = 'http://buildbot.openafs.org:8010/'

# The built-in web server configuration.
# Keep everything read-only until I can come up with a
# proper authentication configuration.
c['www'] = dict(
    port=8010,
    plugins=dict(
        waterfall_view={},
        console_view={},
    )
)

####### Global configuration

c['db'] = {
    'db_url' : "sqlite:///state.sqlite",
}

# Report our version info to the buildbot project to allow the
# buildbot project to gather usage statistics.
c['buildbotNetUsageData'] = 'basic'

from buildbot.plugins import util
from datetime import timedelta

# Delete all logs older than one month, and run on sundays at noon.  The
# previous version of buildbot was able to delete old records by the number of
# record, however this has been changed, and old records are now removed by
# age.
c['configurators'] = [
    util.JanitorConfigurator(
        logHorizon=timedelta(weeks=4),
        hour=12,
        dayOfWeek=6),
]
